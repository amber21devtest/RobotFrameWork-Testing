<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180825 23:33:12.857" generator="Robot 3.0.4 (Python 2.7.15 on win32)">
<suite source="D:\00_Workspace\04_RobotFrameWork\01_Python\RobotFrameWork-Testing" id="s1" name="RobotFrameWork-Testing">
<suite source="D:\00_Workspace\04_RobotFrameWork\01_Python\RobotFrameWork-Testing\TestSuites" id="s1-s1" name="TestSuites">
<suite source="D:\00_Workspace\04_RobotFrameWork\01_Python\RobotFrameWork-Testing\TestSuites\Performance_TestCases" id="s1-s1-s1" name="Performance TestCases">
<suite source="D:\00_Workspace\04_RobotFrameWork\01_Python\RobotFrameWork-Testing\TestSuites\Performance_TestCases\Sample.robot" id="s1-s1-s1-s1" name="Sample">
<test id="s1-s1-s1-s1-t1" name="tc1_justRunJMeter">
<kw name="Run Jmeter" library="JMeterLib">
<doc>Runs JMeter. Returns None.</doc>
<arguments>
<arg>${jMeterStartup}</arg>
<arg>${jmxFileLocation}</arg>
<arg>${outputResults}/tc1_justRunJMeter.jtl</arg>
</arguments>
<msg timestamp="20180825 23:33:17.610" level="INFO">Starting JMeter with following parameters:
 - JMeter path: C:/Jmeter/bin/jmeter.bat
 - Test plan path: D:/00_Workspace/07_Jmeter/00_SampleTestCases/firstTestCase.jmx
 - Log file path: D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl
 - Other parameters:  .
subprocess.call input list: [u'C:/Jmeter/bin/jmeter.bat', '-n', '-t', u'D:/00_Workspace/07_Jmeter/00_SampleTestCases/firstTestCase.jmx', '-l', u'D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl']
Value returned by JMeter: 0</msg>
<status status="PASS" endtime="20180825 23:33:17.610" starttime="20180825 23:33:12.988"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:17.611" critical="yes" starttime="20180825 23:33:12.985"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="tc2_analyseAndConvertExistingJtlLog">
<kw name="Analyse Jtl Convert" library="JMeterLib">
<doc>Parses JMeter log file. Converts results into HTML and SQLite format.</doc>
<arguments>
<arg>${outputResults}/tc1_justRunJMeter.jtl</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20180825 23:33:18.934" level="INFO">Opening log file D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl
Log file format: csv
Extracting samples and assertions from D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl
Calculating statistical values
Creating html D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl20180825180317.html
Creating SQLite DB file D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc1_justRunJMeter.jtl20180825180317.sql</msg>
<msg timestamp="20180825 23:33:18.936" level="INFO">${result} = [{'samplesSuccessRateNoAssert': 100, 'minTime': 84, 'assertions': 0, 'samples': 11, 'averageTime': 140, 'maxTime': 256, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}, {'totalTime': 405....</msg>
<status status="PASS" endtime="20180825 23:33:18.936" starttime="20180825 23:33:17.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180825 23:33:18.941" level="INFO">[{'samplesSuccessRateNoAssert': 100, 'minTime': 84, 'assertions': 0, 'samples': 11, 'averageTime': 140, 'maxTime': 256, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}, {'totalTime': 405.18, 'samplesErrorInclAssert': 0, 'sampleName': 'Visit TutorialsPoint Home Page', 'averageBytes': 35417, 'median': 104, 'bytesPerSec': 961.5158694901031, 'samplesErrorNoAssert': 0, 'throughput': '0.03', 'startTime': datetime.datetime(2018, 8, 25, 23, 26, 31, 881000), 'timeTable': [181, 256, 190, 103, 84, 95, 219, 136, 89, 86, 104], 'percentil90': 256, 'endTime': datetime.datetime(2018, 8, 25, 23, 33, 17, 61000), 'kBytesPerSec': '1.0', 'stddev': '58.2', 'samplesSuccessRateInclAssert': 100, 'samplesSuccessRateNoAssert': 100}, {'totalTime': 405.18, 'samplesErrorInclAssert': 0, 'sampleName': 'TOTAL', 'averageBytes': 35417, 'median': 104, 'bytesPerSec': 961.5158694901031, 'samplesErrorNoAssert': 0, 'throughput': '0.03', 'startTime': datetime.datetime(2018, 8, 25, 23, 26, 31, 881000), 'timeTable': [181, 256, 190, 103, 84, 95, 219, 136, 89, 86, 104], 'percentil90': 256, 'endTime': datetime.datetime(2018, 8, 25, 23, 33, 17, 61000), 'kBytesPerSec': '1.0', 'stddev': '58.2', 'samplesSuccessRateInclAssert': 100, 'samplesSuccessRateNoAssert': 100}]</msg>
<status status="PASS" endtime="20180825 23:33:18.942" starttime="20180825 23:33:18.938"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{result} ]">
<kw type="foritem" name="${ELEMENT} = {'samplesSuccessRateNoAssert': 100, 'minTime': 84, 'assertions': 0, 'samples': 11, 'averageTime': 140, 'maxTime': 256, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:18.949" level="INFO">Dictionary size is 8 and it contains following items:
assertionPassRate: 0
assertions: 0
averageTime: 140
maxTime: 256
minTime: 84
samples: 11
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100</msg>
<status status="PASS" endtime="20180825 23:33:18.950" starttime="20180825 23:33:18.947"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>samplesSuccessRateInclAssert</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20180825 23:33:18.955" level="INFO">${check} = 100</msg>
<status status="PASS" endtime="20180825 23:33:18.955" starttime="20180825 23:33:18.952"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<status status="PASS" endtime="20180825 23:33:18.959" starttime="20180825 23:33:18.957"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:18.961" starttime="20180825 23:33:18.946"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = {'totalTime': 405.18, 'samplesErrorInclAssert': 0, 'sampleName': 'Visit TutorialsPoint Home Page', 'averageBytes': 35417, 'median': 104, 'bytesPerSec': 961.5158694901031, 'samplesErrorNoAssert': 0, 't...">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:18.967" level="INFO">Dictionary size is 16 and it contains following items:
averageBytes: 35417
bytesPerSec: 961.51586949
endTime: 2018-08-25 23:33:17.061000
kBytesPerSec: 1.0
median: 104
percentil90: 256
sampleName: Visit TutorialsPoint Home Page
samplesErrorInclAssert: 0
samplesErrorNoAssert: 0
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100
startTime: 2018-08-25 23:26:31.881000
stddev: 58.2
throughput: 0.03
timeTable: [181, 256, 190, 103, 84, 95, 219, 136, 89, 86, 104]
totalTime: 405.18</msg>
<status status="PASS" endtime="20180825 23:33:18.968" starttime="20180825 23:33:18.964"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>samplesSuccessRateInclAssert</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20180825 23:33:18.974" level="INFO">${check} = 100</msg>
<status status="PASS" endtime="20180825 23:33:18.975" starttime="20180825 23:33:18.970"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<status status="PASS" endtime="20180825 23:33:18.981" starttime="20180825 23:33:18.978"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:18.982" starttime="20180825 23:33:18.963"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = {'totalTime': 405.18, 'samplesErrorInclAssert': 0, 'sampleName': 'TOTAL', 'averageBytes': 35417, 'median': 104, 'bytesPerSec': 961.5158694901031, 'samplesErrorNoAssert': 0, 'throughput': '0.03', 'star...">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:18.989" level="INFO">Dictionary size is 16 and it contains following items:
averageBytes: 35417
bytesPerSec: 961.51586949
endTime: 2018-08-25 23:33:17.061000
kBytesPerSec: 1.0
median: 104
percentil90: 256
sampleName: TOTAL
samplesErrorInclAssert: 0
samplesErrorNoAssert: 0
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100
startTime: 2018-08-25 23:26:31.881000
stddev: 58.2
throughput: 0.03
timeTable: [181, 256, 190, 103, 84, 95, 219, 136, 89, 86, 104]
totalTime: 405.18</msg>
<status status="PASS" endtime="20180825 23:33:18.991" starttime="20180825 23:33:18.986"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
<arg>samplesSuccessRateInclAssert</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20180825 23:33:18.994" level="INFO">${check} = 100</msg>
<status status="PASS" endtime="20180825 23:33:18.997" starttime="20180825 23:33:18.992"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<status status="PASS" endtime="20180825 23:33:19.001" starttime="20180825 23:33:18.999"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:19.002" starttime="20180825 23:33:18.985"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:19.004" starttime="20180825 23:33:18.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${check}</arg>
<arg>100</arg>
</arguments>
<msg timestamp="20180825 23:33:19.007" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180825 23:33:19.009" starttime="20180825 23:33:19.006"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:19.011" critical="yes" starttime="20180825 23:33:17.612"></status>
</test>
<test id="s1-s1-s1-s1-t3" name="tc3_runJMeterAndAnalyseAndConvertLog">
<kw name="Run Jmeter Analyse Jtl Convert" library="JMeterLib">
<doc>Runs JMeter and parses log file. Converts results into HTML and SQLite format.</doc>
<arguments>
<arg>${jMeterStartup}</arg>
<arg>${jmxFileLocation}</arg>
<arg>${outputResults}/tc3_runJMeterAndAnalyseAndConvertLog.jtl</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20180825 23:33:24.422" level="INFO">Starting JMeter with following parameters:
 - JMeter path: C:/Jmeter/bin/jmeter.bat
 - Test plan path: D:/00_Workspace/07_Jmeter/00_SampleTestCases/firstTestCase.jmx
 - Log file path: D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl
 - Other parameters:  .
subprocess.call input list: [u'C:/Jmeter/bin/jmeter.bat', '-n', '-t', u'D:/00_Workspace/07_Jmeter/00_SampleTestCases/firstTestCase.jmx', '-l', u'D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl']
Value returned by JMeter: 0
Opening log file D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl
Log file format: csv
Extracting samples and assertions from D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl
Calculating statistical values
Creating html D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl.html
Creating SQLite DB file D:/00_Workspace/04_RobotFrameWork/01_Python/RF_E2E_Testing/outputResults/tc3_runJMeterAndAnalyseAndConvertLog.jtl.sql</msg>
<msg timestamp="20180825 23:33:24.424" level="INFO">${result} = [{'samplesSuccessRateNoAssert': 100, 'minTime': 77, 'assertions': 0, 'samples': 5, 'averageTime': 116, 'maxTime': 196, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}, {'totalTime': 0.707...</msg>
<status status="PASS" endtime="20180825 23:33:24.424" starttime="20180825 23:33:19.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180825 23:33:24.429" level="INFO">[{'samplesSuccessRateNoAssert': 100, 'minTime': 77, 'assertions': 0, 'samples': 5, 'averageTime': 116, 'maxTime': 196, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}, {'totalTime': 0.707, 'samplesErrorInclAssert': 0, 'sampleName': 'Visit TutorialsPoint Home Page', 'averageBytes': 35417, 'median': 99, 'bytesPerSec': 250473.8330975955, 'samplesErrorNoAssert': 0, 'throughput': '7.07', 'startTime': datetime.datetime(2018, 8, 25, 23, 33, 22, 287000), 'timeTable': [196, 121, 99, 77, 88], 'percentil90': 196, 'endTime': datetime.datetime(2018, 8, 25, 23, 33, 22, 994000), 'kBytesPerSec': '250.5', 'stddev': '42.5', 'samplesSuccessRateInclAssert': 100, 'samplesSuccessRateNoAssert': 100}, {'totalTime': 0.707, 'samplesErrorInclAssert': 0, 'sampleName': 'TOTAL', 'averageBytes': 35417, 'median': 99, 'bytesPerSec': 250473.8330975955, 'samplesErrorNoAssert': 0, 'throughput': '7.07', 'startTime': datetime.datetime(2018, 8, 25, 23, 33, 22, 287000), 'timeTable': [196, 121, 99, 77, 88], 'percentil90': 196, 'endTime': datetime.datetime(2018, 8, 25, 23, 33, 22, 994000), 'kBytesPerSec': '250.5', 'stddev': '42.5', 'samplesSuccessRateInclAssert': 100, 'samplesSuccessRateNoAssert': 100}]</msg>
<status status="PASS" endtime="20180825 23:33:24.430" starttime="20180825 23:33:24.426"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{result} ]">
<kw type="foritem" name="${ELEMENT} = {'samplesSuccessRateNoAssert': 100, 'minTime': 77, 'assertions': 0, 'samples': 5, 'averageTime': 116, 'maxTime': 196, 'assertionPassRate': 0, 'samplesSuccessRateInclAssert': 100}">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:24.437" level="INFO">Dictionary size is 8 and it contains following items:
assertionPassRate: 0
assertions: 0
averageTime: 116
maxTime: 196
minTime: 77
samples: 5
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100</msg>
<status status="PASS" endtime="20180825 23:33:24.438" starttime="20180825 23:33:24.435"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:24.438" starttime="20180825 23:33:24.433"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = {'totalTime': 0.707, 'samplesErrorInclAssert': 0, 'sampleName': 'Visit TutorialsPoint Home Page', 'averageBytes': 35417, 'median': 99, 'bytesPerSec': 250473.8330975955, 'samplesErrorNoAssert': 0, 'thr...">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:24.442" level="INFO">Dictionary size is 16 and it contains following items:
averageBytes: 35417
bytesPerSec: 250473.833098
endTime: 2018-08-25 23:33:22.994000
kBytesPerSec: 250.5
median: 99
percentil90: 196
sampleName: Visit TutorialsPoint Home Page
samplesErrorInclAssert: 0
samplesErrorNoAssert: 0
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100
startTime: 2018-08-25 23:33:22.287000
stddev: 42.5
throughput: 7.07
timeTable: [196, 121, 99, 77, 88]
totalTime: 0.707</msg>
<status status="PASS" endtime="20180825 23:33:24.444" starttime="20180825 23:33:24.441"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:24.446" starttime="20180825 23:33:24.440"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = {'totalTime': 0.707, 'samplesErrorInclAssert': 0, 'sampleName': 'TOTAL', 'averageBytes': 35417, 'median': 99, 'bytesPerSec': 250473.8330975955, 'samplesErrorNoAssert': 0, 'throughput': '7.07', 'startT...">
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<msg timestamp="20180825 23:33:24.450" level="INFO">Dictionary size is 16 and it contains following items:
averageBytes: 35417
bytesPerSec: 250473.833098
endTime: 2018-08-25 23:33:22.994000
kBytesPerSec: 250.5
median: 99
percentil90: 196
sampleName: TOTAL
samplesErrorInclAssert: 0
samplesErrorNoAssert: 0
samplesSuccessRateInclAssert: 100
samplesSuccessRateNoAssert: 100
startTime: 2018-08-25 23:33:22.287000
stddev: 42.5
throughput: 7.07
timeTable: [196, 121, 99, 77, 88]
totalTime: 0.707</msg>
<status status="PASS" endtime="20180825 23:33:24.451" starttime="20180825 23:33:24.449"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:24.452" starttime="20180825 23:33:24.448"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:24.453" starttime="20180825 23:33:24.432"></status>
</kw>
<status status="PASS" endtime="20180825 23:33:24.454" critical="yes" starttime="20180825 23:33:19.015"></status>
</test>
<status status="PASS" endtime="20180825 23:33:24.458" starttime="20180825 23:33:12.942"></status>
</suite>
<status status="PASS" endtime="20180825 23:33:24.471" starttime="20180825 23:33:12.936"></status>
</suite>
<status status="PASS" endtime="20180825 23:33:24.481" starttime="20180825 23:33:12.932"></status>
</suite>
<status status="PASS" endtime="20180825 23:33:24.492" starttime="20180825 23:33:12.901"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="RobotFrameWork-Testing" pass="3">RobotFrameWork-Testing</stat>
<stat fail="0" id="s1-s1" name="TestSuites" pass="3">RobotFrameWork-Testing.TestSuites</stat>
<stat fail="0" id="s1-s1-s1" name="Performance TestCases" pass="3">RobotFrameWork-Testing.TestSuites.Performance TestCases</stat>
<stat fail="0" id="s1-s1-s1-s1" name="Sample" pass="3">RobotFrameWork-Testing.TestSuites.Performance TestCases.Sample</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
